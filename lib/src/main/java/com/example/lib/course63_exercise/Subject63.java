package com.example.lib.course63_exercise;

/**
 * Created by qinshunan on 2019/6/17.
 */

public class Subject63 {

    /**
     *
     几种算法思想必知必会的代码实现
     回溯
     利用回溯算法求解八皇后问题

     利用回溯算法求解 0-1 背包问题

     分治
     利用分治算法求一组数据的逆序对个数
     动态规划
     0-1 背包问题

     最小路径和（详细可看 @Smallfly 整理的 Minimum Path Sum）

     编程实现莱文斯坦最短编辑距离

     编程实现查找两个字符串的最长公共子序列

     编程实现一个数据序列的最长递增子序列

     对应的 LeetCode 练习题（@Smallfly 整理）
     Regular Expression Matching（正则表达式匹配）
     中文版：https://leetcode-cn.com/problems/regular-expression-matching/

     Minimum Path Sum（最小路径和）
     中文版：https://leetcode-cn.com/problems/minimum-path-sum/

     Coin Change （零钱兑换）
     中文版：https://leetcode-cn.com/problems/coin-change/

     Best Time to Buy and Sell Stock（买卖股票的最佳时机）
     中文版：https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock/

     Maximum Product Subarray（乘积最大子序列）
     中文版：https://leetcode-cn.com/problems/maximum-product-subarray/

     Triangle（三角形最小路径和）
     中文版：https://leetcode-cn.com/problems/triangle/

     *
     */
}
